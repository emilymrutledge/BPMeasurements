// <auto-generated />
using System;
using BPMeasurementsERutledge7809.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BPMeasurementsERutledge7809.Migrations
{
    [DbContext(typeof(BPContext))]
    partial class BPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BPMeasurementsERutledge7809.Models.BPMeasurement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Diastolic")
                        .HasColumnType("int");

                    b.Property<DateTime>("MeasurementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PositionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Systolic")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PositionID");

                    b.ToTable("Measurements");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Diastolic = 80,
                            MeasurementDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PositionID = "S",
                            Systolic = 120
                        },
                        new
                        {
                            ID = 2,
                            Diastolic = 85,
                            MeasurementDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PositionID = "T",
                            Systolic = 130
                        },
                        new
                        {
                            ID = 3,
                            Diastolic = 90,
                            MeasurementDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PositionID = "L",
                            Systolic = 140
                        },
                        new
                        {
                            ID = 4,
                            Diastolic = 100,
                            MeasurementDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PositionID = "S",
                            Systolic = 160
                        },
                        new
                        {
                            ID = 5,
                            Diastolic = 110,
                            MeasurementDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PositionID = "T",
                            Systolic = 180
                        });
                });

            modelBuilder.Entity("BPMeasurementsERutledge7809.Models.Position", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            ID = "S",
                            Name = "Sitting"
                        },
                        new
                        {
                            ID = "T",
                            Name = "Standing"
                        },
                        new
                        {
                            ID = "L",
                            Name = "Lying Down"
                        });
                });

            modelBuilder.Entity("BPMeasurementsERutledge7809.Models.BPMeasurement", b =>
                {
                    b.HasOne("BPMeasurementsERutledge7809.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
